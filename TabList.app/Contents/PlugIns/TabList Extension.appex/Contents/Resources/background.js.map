{"version":3,"file":"background.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,+BAA+B,MAAM;AACrC,aAAa;AACb;AACA;AACA,+BAA+B,UAAU;AACzC,aAAa;AACb;AACA;AACA;AACA,gCAAgC;AAChC,+BAA+B,MAAM;AACrC,aAAa;AACb;AACA,qBAAqB;AACrB;AACA;AACA;AACA,4CAA4C,cAAc;AAC1D,kDAAkD,eAAe;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD","sources":["webpack://safari-tab-switcher/./extension/background.ts"],"sourcesContent":["\"use strict\";\n// Create a runtime listener\nchrome.runtime.onMessage.addListener((msg, sender, sendResponse) => {\n    if (msg.type === \"getTabs\") {\n        // Promise-based API when available, falling back to callback\n        try {\n            chrome.tabs.query({})\n                .then((tabs) => {\n                sendResponse({ tabs });\n            })\n                .catch((error) => {\n                console.error(\"Error querying tabs:\", error);\n                sendResponse({ tabs: [] });\n            });\n        }\n        catch (e) {\n            // Fallback if a browser does not support Promise API\n            chrome.tabs.query({}, (tabs) => {\n                sendResponse({ tabs });\n            });\n        }\n        return true; // Keeping message channel open\n    }\n    if (msg.type === \"switchToTab\") {\n        try {\n            chrome.tabs.update(msg.tabId, { active: true });\n            chrome.windows.update(msg.windowId, { focused: true });\n        }\n        catch (error) {\n            console.error(\"Error switching tab:\", error);\n        }\n        return false;\n    }\n});\nconsole.log(\"Background script loaded\");\n"],"names":[],"sourceRoot":""}